{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "collect",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0Owed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Owed",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mintCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x76587aee8df50c932f243c0a5efc4415acfed1dde264c82835f61e661a17ad07",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "476684",
    "logsBloom": "0x
    "blockHash": "0x31d1e3a299c0973a1f63ee57affadb14bc2c71c813064e5f4f9c2872a1fc9e7a",
    "transactionHash": "0x76587aee8df50c932f243c0a5efc4415acfed1dde264c82835f61e661a17ad07",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "476684",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "31bb6983f93ca5e6a7dbf66a48b1cd56",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockLP.sol\":\"MockLP\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"contracts/interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.24;\\n\\ninterface IMintCallback {\\n    function mintCallback(\\n        uint256 amount0Owed,\\n        uint256 amount1Owed,\\n        bytes calldata data\\n    ) external;\\n}\\n\\ninterface ISwapCallback {\\n    function swapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\\ninterface IPool {\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function fee() external view returns (uint24);\\n\\n    function tick() external view returns (int24);\\n\\n    function tickLower() external view returns (int24);\\n\\n    function tickUpper() external view returns (int24);\\n\\n    function sqrtPriceX96() external view returns (uint160);\\n\\n    function liquidity() external view returns (uint128);\\n\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    ///@notice growth of tokens\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    struct Position {\\n        // \\u8be5 Position \\u62e5\\u6709\\u7684\\u6d41\\u52a8\\u6027\\n        uint128 liquidity;\\n        // \\u53ef\\u63d0\\u53d6\\u7684 token\\u6570\\u91cf\\n        uint128 token0CouldWithdraw;\\n        uint128 token1CouldWithdraw;\\n        // \\u4e0a\\u6b21\\u63d0\\u53d6\\u624b\\u7eed\\u8d39\\u65f6\\u7684 feeGrowthGlobal0X128\\n        uint256 feeGrowthInside0LastX128;\\n        uint256 feeGrowthInside1LastX128;\\n    }\\n    function getPosition(\\n        address owner\\n    )\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    function collect(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    function mint(\\n        address recipient,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    function burn(\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n    event Burn(\\n        address indexed owner,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n}\\n\",\"keccak256\":\"0xc2275402f0cb13941f884ca865e6c390d187fc648c4e8837e954da4812f11a89\",\"license\":\"GPL-2.0-or-later\"},\"contracts/mock/MockLP.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.24;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/IPool.sol\\\";\\n\\ncontract MockLP is IMintCallback {\\n    function mintCallback(\\n        uint256 amount0Owed,\\n        uint256 amount1Owed,\\n        bytes calldata data\\n    ) external override {\\n        (address token0, address token1) = abi.decode(data, (address, address));\\n        if (amount0Owed > 0) {\\n            IERC20(token0).transfer(msg.sender, amount0Owed);\\n        }\\n        if (amount1Owed > 0) {\\n            IERC20(token1).transfer(msg.sender, amount1Owed);\\n        }\\n    }\\n\\n    function sortToken(\\n        address tokenA,\\n        address tokenB\\n    ) private pure returns (address, address) {\\n        return tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\\n    }\\n    event Mint(address, uint128, address, address, address);\\n    function mint(\\n        address recipient,\\n        uint128 amount,\\n        address pool,\\n        address tokenA,\\n        address tokenB\\n    ) external returns (uint256 amount0, uint256 amount1) {\\n        emit Mint(recipient, amount, pool, tokenA, tokenB);\\n\\n        (address token0, address token1) = sortToken(tokenA, tokenB);\\n\\n        (amount0, amount1) = IPool(pool).mint(\\n            recipient,\\n            amount,\\n            abi.encode(token0, token1)\\n        );\\n    }\\n\\n    function burn(\\n        uint128 amount,\\n        address pool\\n    ) external returns (uint256 amount0, uint256 amount1) {\\n        (amount0, amount1) = IPool(pool).burn(amount);\\n    }\\n\\n    function collect(\\n        address recipient,\\n        address pool\\n    ) external returns (uint256 amount0, uint256 amount1) {\\n        (, , , uint128 tokensOwed0, uint128 tokensOwed1) = IPool(pool)\\n            .getPosition(address(this));\\n        (amount0, amount1) = IPool(pool).collect(\\n            recipient,\\n            tokensOwed0,\\n            tokensOwed1\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x07a65ac215f115cb39188e1d269b6b4478dd6620001f3d1724815d7388d19600\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506107a9806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063758ff21d146100515780639f382e9b1461007d578063a12ef25e14610092578063d1cec96b146100a5575b600080fd5b61006461005f3660046104ec565b6100b8565b6040805192835260208301919091520160405180910390f35b61009061008b36600461055d565b6101e8565b005b6100646100a03660046105dd565b6102f6565b6100646100b3366004610616565b61040c565b604080516001600160a01b0387811682526001600160801b038716602083015285811682840152848116606083015283166080820152905160009182917f493ee2c6c1373370c88fcac1965f77f9c21537e199574375dc33abe85435fa939181900360a00190a160008061012c868661048e565b91509150866001600160a01b03166392f026ad8a8a85856040516020016101699291906001600160a01b0392831681529116602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161019693929190610634565b60408051808303816000875af11580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d891906106a3565b909a909950975050505050505050565b6000806101f7838501856105dd565b909250905085156102755760405163a9059cbb60e01b8152336004820152602481018790526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561024f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027391906106c7565b505b84156102ee5760405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0382169063a9059cbb906044016020604051808303816000875af11580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec91906106c7565b505b505050505050565b6040516316c1973960e01b81523060048201526000908190819081906001600160a01b038616906316c197399060240160a060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036791906106f0565b6040516360d49d5360e01b81526001600160a01b038c811660048301526001600160801b0380851660248401528316604483015292975090955090891693506360d49d539250606401905060408051808303816000875af11580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190610744565b6001600160801b039182169891169650945050505050565b6040516390bc169360e01b81526001600160801b038316600482015260009081906001600160a01b038416906390bc16939060240160408051808303816000875af115801561045f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048391906106a3565b909590945092505050565b600080826001600160a01b0316846001600160a01b0316106104b15782846104b4565b83835b915091509250929050565b6001600160a01b03811681146104d457600080fd5b50565b6001600160801b03811681146104d457600080fd5b600080600080600060a0868803121561050457600080fd5b853561050f816104bf565b9450602086013561051f816104d7565b9350604086013561052f816104bf565b9250606086013561053f816104bf565b9150608086013561054f816104bf565b809150509295509295909350565b6000806000806060858703121561057357600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561059957600080fd5b818701915087601f8301126105ad57600080fd5b8135818111156105bc57600080fd5b8860208285010111156105ce57600080fd5b95989497505060200194505050565b600080604083850312156105f057600080fd5b82356105fb816104bf565b9150602083013561060b816104bf565b809150509250929050565b6000806040838503121561062957600080fd5b82356105fb816104d7565b60018060a01b0384168152600060206001600160801b038516602084015260606040840152835180606085015260005b8181101561068057858101830151858201608001528201610664565b506000608082860101526080601f19601f83011685010192505050949350505050565b600080604083850312156106b657600080fd5b505080516020909101519092909150565b6000602082840312156106d957600080fd5b815180151581146106e957600080fd5b9392505050565b600080600080600060a0868803121561070857600080fd5b8551610713816104d7565b8095505060208601519350604086015192506060860151610733816104d7565b608087015190925061054f816104d7565b6000806040838503121561075757600080fd5b8251610762816104d7565b602084015190925061060b816104d756fea2646970667358221220b3b502b8d054152715e04f427a43cf6c88e95b22dffdbf8e52eab88a1f56fe3d64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063758ff21d146100515780639f382e9b1461007d578063a12ef25e14610092578063d1cec96b146100a5575b600080fd5b61006461005f3660046104ec565b6100b8565b6040805192835260208301919091520160405180910390f35b61009061008b36600461055d565b6101e8565b005b6100646100a03660046105dd565b6102f6565b6100646100b3366004610616565b61040c565b604080516001600160a01b0387811682526001600160801b038716602083015285811682840152848116606083015283166080820152905160009182917f493ee2c6c1373370c88fcac1965f77f9c21537e199574375dc33abe85435fa939181900360a00190a160008061012c868661048e565b91509150866001600160a01b03166392f026ad8a8a85856040516020016101699291906001600160a01b0392831681529116602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161019693929190610634565b60408051808303816000875af11580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d891906106a3565b909a909950975050505050505050565b6000806101f7838501856105dd565b909250905085156102755760405163a9059cbb60e01b8152336004820152602481018790526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561024f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027391906106c7565b505b84156102ee5760405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0382169063a9059cbb906044016020604051808303816000875af11580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec91906106c7565b505b505050505050565b6040516316c1973960e01b81523060048201526000908190819081906001600160a01b038616906316c197399060240160a060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036791906106f0565b6040516360d49d5360e01b81526001600160a01b038c811660048301526001600160801b0380851660248401528316604483015292975090955090891693506360d49d539250606401905060408051808303816000875af11580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190610744565b6001600160801b039182169891169650945050505050565b6040516390bc169360e01b81526001600160801b038316600482015260009081906001600160a01b038416906390bc16939060240160408051808303816000875af115801561045f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048391906106a3565b909590945092505050565b600080826001600160a01b0316846001600160a01b0316106104b15782846104b4565b83835b915091509250929050565b6001600160a01b03811681146104d457600080fd5b50565b6001600160801b03811681146104d457600080fd5b600080600080600060a0868803121561050457600080fd5b853561050f816104bf565b9450602086013561051f816104d7565b9350604086013561052f816104bf565b9250606086013561053f816104bf565b9150608086013561054f816104bf565b809150509295509295909350565b6000806000806060858703121561057357600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561059957600080fd5b818701915087601f8301126105ad57600080fd5b8135818111156105bc57600080fd5b8860208285010111156105ce57600080fd5b95989497505060200194505050565b600080604083850312156105f057600080fd5b82356105fb816104bf565b9150602083013561060b816104bf565b809150509250929050565b6000806040838503121561062957600080fd5b82356105fb816104d7565b60018060a01b0384168152600060206001600160801b038516602084015260606040840152835180606085015260005b8181101561068057858101830151858201608001528201610664565b506000608082860101526080601f19601f83011685010192505050949350505050565b600080604083850312156106b657600080fd5b505080516020909101519092909150565b6000602082840312156106d957600080fd5b815180151581146106e957600080fd5b9392505050565b600080600080600060a0868803121561070857600080fd5b8551610713816104d7565b8095505060208601519350604086015192506060860151610733816104d7565b608087015190925061054f816104d7565b6000806040838503121561075757600080fd5b8251610762816104d7565b602084015190925061060b816104d756fea2646970667358221220b3b502b8d054152715e04f427a43cf6c88e95b22dffdbf8e52eab88a1f56fe3d64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}