{
  "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "amountSpecified",
          "type": "int256"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "testSwap",
      "outputs": [
        {
          "internalType": "int256",
          "name": "amount0",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0364d602ad372549e8f855495958afdcbdbecf8d63356168d3a1e341f298b4e6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
    "transactionIndex": 0,
    "gasUsed": "306763",
    "logsBloom": "0x
    "blockHash": "0xe6479d7a6ace81f89e24f64f947f9e1b3a9b40b86b5269a1530d2ee07fcff9db",
    "transactionHash": "0x0364d602ad372549e8f855495958afdcbdbecf8d63356168d3a1e341f298b4e6",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "306763",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e6f3973e3c1460d2283c827658d8f7cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"testSwap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockSwap.sol\":\"MockSwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"contracts/interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.24;\\n\\ninterface IMintCallback {\\n    function mintCallback(\\n        uint256 amount0Owed,\\n        uint256 amount1Owed,\\n        bytes calldata data\\n    ) external;\\n}\\n\\ninterface ISwapCallback {\\n    function swapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\\ninterface IPool {\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function fee() external view returns (uint24);\\n\\n    function tick() external view returns (int24);\\n\\n    function tickLower() external view returns (int24);\\n\\n    function tickUpper() external view returns (int24);\\n\\n    function sqrtPriceX96() external view returns (uint160);\\n\\n    function liquidity() external view returns (uint128);\\n\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    ///@notice growth of tokens\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    struct Position {\\n        // \\u8be5 Position \\u62e5\\u6709\\u7684\\u6d41\\u52a8\\u6027\\n        uint128 liquidity;\\n        // \\u53ef\\u63d0\\u53d6\\u7684 token\\u6570\\u91cf\\n        uint128 token0CouldWithdraw;\\n        uint128 token1CouldWithdraw;\\n        // \\u4e0a\\u6b21\\u63d0\\u53d6\\u624b\\u7eed\\u8d39\\u65f6\\u7684 feeGrowthGlobal0X128\\n        uint256 feeGrowthInside0LastX128;\\n        uint256 feeGrowthInside1LastX128;\\n    }\\n    function getPosition(\\n        address owner\\n    )\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    function collect(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    function mint(\\n        address recipient,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    function burn(\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n    event Burn(\\n        address indexed owner,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n}\\n\",\"keccak256\":\"0xc2275402f0cb13941f884ca865e6c390d187fc648c4e8837e954da4812f11a89\",\"license\":\"GPL-2.0-or-later\"},\"contracts/mock/MockSwap.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.24;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/IPool.sol\\\";\\n\\ncontract MockSwap is ISwapCallback {\\n    //\\u4f1a\\u88ab Pool \\u5408\\u7ea6\\u8c03\\u7528\\n    function swapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external override {\\n        (address token0, address token1) = abi.decode(data, (address, address));\\n        if (amount0Delta > 0) {\\n            IERC20(token0).transfer(msg.sender, uint(amount0Delta));\\n        }\\n        if (amount1Delta > 0) {\\n            IERC20(token1).transfer(msg.sender, uint(amount1Delta));\\n        }\\n    }\\n\\n    function testSwap(\\n        address recipient,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        address pool,\\n        address token0,\\n        address token1\\n    ) external returns (int256 amount0, int256 amount1) {\\n        (amount0, amount1) = IPool(pool).swap(\\n            recipient,\\n            true,\\n            amountSpecified,\\n            sqrtPriceLimitX96,\\n            abi.encode(token0, token1)\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xc4ba5c15dba63abaac62887407419ca8457e473f2e8b0df894c818383d648eb7\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610496806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063272e6ea01461003b578063fa483e7214610067575b600080fd5b61004e610049366004610266565b61007c565b6040805192835260208301919091520160405180910390f35b61007a6100753660046102df565b61013b565b005b600080846001600160a01b031663128acb088960018a8a89896040516020016100bb9291906001600160a01b0392831681529116602082015260400190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016100ea95949392919061035f565b60408051808303816000875af1158015610108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012c91906103da565b90999098509650505050505050565b60008061014a838501856103fe565b9150915060008613156101ca5760405163a9059cbb60e01b8152336004820152602481018790526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610437565b505b60008513156102465760405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102449190610437565b505b505050505050565b6001600160a01b038116811461026357600080fd5b50565b60008060008060008060c0878903121561027f57600080fd5b863561028a8161024e565b95506020870135945060408701356102a18161024e565b935060608701356102b18161024e565b925060808701356102c18161024e565b915060a08701356102d18161024e565b809150509295509295509295565b600080600080606085870312156102f557600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561031b57600080fd5b818701915087601f83011261032f57600080fd5b81358181111561033e57600080fd5b88602082850101111561035057600080fd5b95989497505060200194505050565b600060018060a01b03808816835260208715156020850152866040850152818616606085015260a06080850152845191508160a085015260005b828110156103b55785810182015185820160c001528101610399565b5050600060c0828501015260c0601f19601f8301168401019150509695505050505050565b600080604083850312156103ed57600080fd5b505080516020909101519092909150565b6000806040838503121561041157600080fd5b823561041c8161024e565b9150602083013561042c8161024e565b809150509250929050565b60006020828403121561044957600080fd5b8151801515811461045957600080fd5b939250505056fea2646970667358221220891b7faacf88fcf62419ae36fc3cc6ee18abc639c3019ca9ab40c2776e188fdc64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063272e6ea01461003b578063fa483e7214610067575b600080fd5b61004e610049366004610266565b61007c565b6040805192835260208301919091520160405180910390f35b61007a6100753660046102df565b61013b565b005b600080846001600160a01b031663128acb088960018a8a89896040516020016100bb9291906001600160a01b0392831681529116602082015260400190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016100ea95949392919061035f565b60408051808303816000875af1158015610108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012c91906103da565b90999098509650505050505050565b60008061014a838501856103fe565b9150915060008613156101ca5760405163a9059cbb60e01b8152336004820152602481018790526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610437565b505b60008513156102465760405163a9059cbb60e01b8152336004820152602481018690526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102449190610437565b505b505050505050565b6001600160a01b038116811461026357600080fd5b50565b60008060008060008060c0878903121561027f57600080fd5b863561028a8161024e565b95506020870135945060408701356102a18161024e565b935060608701356102b18161024e565b925060808701356102c18161024e565b915060a08701356102d18161024e565b809150509295509295509295565b600080600080606085870312156102f557600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561031b57600080fd5b818701915087601f83011261032f57600080fd5b81358181111561033e57600080fd5b88602082850101111561035057600080fd5b95989497505060200194505050565b600060018060a01b03808816835260208715156020850152866040850152818616606085015260a06080850152845191508160a085015260005b828110156103b55785810182015185820160c001528101610399565b5050600060c0828501015260c0601f19601f8301168401019150509695505050505050565b600080604083850312156103ed57600080fd5b505080516020909101519092909150565b6000806040838503121561041157600080fd5b823561041c8161024e565b9150602083013561042c8161024e565b809150509250929050565b60006020828403121561044957600080fd5b8151801515811461045957600080fd5b939250505056fea2646970667358221220891b7faacf88fcf62419ae36fc3cc6ee18abc639c3019ca9ab40c2776e188fdc64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}